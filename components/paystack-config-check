"use client"

import { useEffect, useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { CheckCircle, XCircle, AlertCircle, RefreshCw, Zap } from "lucide-react"

interface ConfigStatus {
  paystack_configured: boolean
  paystack_mode: string
  environment: string
  app_url: string
  testing_mode: boolean
  secret_key_present: boolean
  public_key_present: boolean
  keys_from_env: boolean
}

export function PaystackConfigCheck() {
  const [config, setConfig] = useState<ConfigStatus | null>(null)
  const [loading, setLoading] = useState(true)

  const checkConfig = async () => {
    setLoading(true)
    try {
      // Simulate config check for now
      setTimeout(() => {
        setConfig({
          paystack_configured: true,
          paystack_mode: "test",
          environment: "development",
          app_url: "http://localhost:3000",
          testing_mode: true,
          secret_key_present: true,
          public_key_present: true,
          keys_from_env: false,
        })
        setLoading(false)
      }, 1000)
    } catch (error) {
      console.error("Error checking config:", error)
      setLoading(false)
    }
  }

  useEffect(() => {
    checkConfig()
  }, [])

  if (loading) {
    return (
      <Card>
        <CardContent className="p-6">
          <div className="flex items-center gap-2">
            <RefreshCw className="h-4 w-4 animate-spin" />
            <span>Checking configuration...</span>
          </div>
        </CardContent>
      </Card>
    )
  }

  if (!config) return null

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          {config.paystack_configured ? (
            <CheckCircle className="h-5 w-5 text-green-600" />
          ) : (
            <AlertCircle className="h-5 w-5 text-orange-600" />
          )}
          Paystack Configuration Status
        </CardTitle>
        <CardDescription>Payment gateway configuration and connection status</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid grid-cols-2 gap-4">
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="text-sm font-medium">Paystack Integration</span>
              <Badge variant={config.paystack_configured ? "default" : "secondary"}>
                {config.paystack_configured ? (
                  <>
                    <CheckCircle className="h-3 w-3 mr-1" />
                    Configured
                  </>
                ) : (
                  <>
                    <XCircle className="h-3 w-3 mr-1" />
                    Not Configured
                  </>
                )}
              </Badge>
            </div>

            {config.paystack_configured && (
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium">Paystack Mode</span>
                <Badge variant={config.paystack_mode === "live" ? "destructive" : "default"}>
                  <Zap className="h-3 w-3 mr-1" />
                  {config.paystack_mode.toUpperCase()}
                </Badge>
              </div>
            )}

            <div className="flex items-center justify-between">
              <span className="text-sm font-medium">Environment</span>
              <Badge variant={config.environment === "production" ? "default" : "outline"}>{config.environment}</Badge>
            </div>
          </div>

          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="text-sm font-medium">Secret Key</span>
              <Badge variant={config.secret_key_present ? "default" : "secondary"}>
                {config.secret_key_present ? "Present" : "Missing"}
              </Badge>
            </div>

            <div className="flex items-center justify-between">
              <span className="text-sm font-medium">Public Key</span>
              <Badge variant={config.public_key_present ? "default" : "secondary"}>
                {config.public_key_present ? "Present" : "Missing"}
              </Badge>
            </div>
          </div>
        </div>

        <div className="p-4 bg-green-50 rounded-lg border border-green-200">
          <h4 className="font-medium text-green-900 mb-2">âœ… Configuration Ready</h4>
          <p className="text-sm text-green-800">
            Paystack is configured in <strong>{config.paystack_mode.toUpperCase()}</strong> mode.
          </p>
        </div>

        <Button onClick={checkConfig} variant="outline" size="sm" disabled={loading}>
          <RefreshCw className={`h-4 w-4 mr-2 ${loading ? "animate-spin" : ""}`} />
          Refresh Config
        </Button>
      </CardContent>
    </Card>
  )
}
